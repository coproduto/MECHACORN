<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Villain</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the boss's variables

event_inherited();
Enemy_Lives = 50;
max_lives = 50;
damage_taken = 0;
platform_level = 0;
max_platform_level = 0;
first_alarm = false;

platform_heights[0] = 1888;
platform_heights[1] = 1632;
platform_heights[2] = 1376;
platform_heights[3] = 1184;
platform_heights[4] = 992;
platform_heights[5] = 768;
platform_heights[6] = 512;
platform_heights[7] = 288;
position_self_X = 600;

Movable_Facing = 180;
Movable_Side = 180;

//constants
Movable_Bullet_Speed = Bullet_Speed;
Movable_Bullet_Deviation = Bullet_Deviation;
Movable_Obj_Tiro = Obj_Enemy_Bullet1;
Movable_Bullet_Delay = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///summon monsters

if(platform_level &gt; 0) {
    rand_pos_x = random(1100);
    monster_id = ceil(random(3));
    monster_platform = floor(random(platform_level));

    instance_create(50 + rand_pos_x, platform_heights[monster_platform], Obj_Villain_Cloud)
    switch(monster_id) {
        case 1:
            instance_create(50 + rand_pos_x,
                            platform_heights[monster_platform],
                            Obj_Enemy1);
            break;
        case 2:
            instance_create(50 + rand_pos_x,
                            platform_heights[monster_platform],
                            Obj_Enemy2);
            break;
        case 3:
            instance_create(50 + rand_pos_x,
                            platform_heights[monster_platform],
                            Obj_Enemy3);
            break;
        default:
            instance_create(50 + rand_pos_x,
                            platform_heights[monster_platform],
                            Obj_Enemy1);
            break;
    }
    alarm[0] = 150;
} else {
    first_alarm = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///run AI
event_inherited();

if(Enemy_Lives &lt; max_lives) {
    damage_taken += max_lives - Enemy_Lives; //count how much damage we took
    max_lives = Enemy_Lives; //update our life
}

old_platform_level = platform_level; //decide whether we need to teleport
if((platform_level == 0) &amp;&amp; (damage_taken &gt;= 10)) { //if we need to teleport, 
    if(max_platform_level == 0) {                   //choose which level to go to
        platform_level = 2;
        max_platform_level = 2;
    } else if(max_platform_level == 2) {
        platform_level = 4;
        max_platform_level = 4;
    } else if(max_platform_level == 4) {
        platform_level = 5;
        max_platform_level = 5;
    } else if(max_platform_level == 5) {
        platform_level = 7;
        max_platform_level = 7;
    } else if(max_platform_level == 7) {
        platform_level = 7;
    } else {
        platform_level = 2;
        max_platform_level = 2;
    }
    damage_taken = 0;
} else if((platform_level != 0) &amp;&amp; (damage_taken &gt; 0)) {
    platform_level = 0;
}

//teleport!
instance_create(x, y, Obj_Villain_Cloud);
if((old_platform_level == 0) and (platform_level != 0)) {
    y = platform_heights[platform_level];
    x = position_self_X;
} else if((old_platform_level != 0) and (platform_level == 0)) {
    y = platform_heights[0];
    x = 300 + random(600);
}

//if we're not on the ground, summon monsters
if(platform_level &gt; 0 and (not first_alarm)) {
    alarm[0] = 1;
    first_alarm = true;      
} 
    
//always face the player's direction
if(instance_exists(Obj_Player)) {
    if(Obj_Player.x &lt; x) {
        image_xscale = -1;
        Movable_Facing = 180;
    } else if(Obj_Player.x &gt; x) {
        image_xscale = 1;
        Movable_Facing = 0;
    }

    //if player is level with boss, boss shoots
    if(abs(Obj_Player.y-y) &lt; 64) {
        Control_Shoot = 1;
    } else { 
        Control_Shoot = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
